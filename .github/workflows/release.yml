name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    name: Tag and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Override remote URL to use GH_PAT
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Get current version from package.json
        id: get_version
        run: echo "version=v$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Fetch all tags
        run: git fetch --tags

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          TAG: ${{ steps.get_version.outputs.version }}

      - name: Debug GH_PAT presence
        run: |
          echo "GH_PAT is: ${GH_PAT:0:4}********"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Create Git tag
        if: steps.check_tag.outputs.exists == 'false'
        env:
          TAG: ${{ steps.get_version.outputs.version }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git push origin "$TAG"

      - name: Publish to npm
        if: steps.check_tag.outputs.exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
